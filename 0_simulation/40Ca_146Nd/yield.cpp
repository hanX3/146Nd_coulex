//

#define DEG30_NUM 6
#define DEG60_NUM 8
#define DEG90_NUM 12
#define DEG120_NUM 8
#define DEG150_NUM 6

//
#define Z_BEAM 20.
#define A_AIM 146
#define TIME 100 // hour
#define GE_SOLID_ANGLE 0.1
#define GAMMA_EFF 0.2

// 2+ --> 0+
// #define UP_CS_DEG30 0.46636E+02
// #define UP_CS_DEG60 0.48309E+02
// #define UP_CS_DEG90 0.49861E+02
// #define UP_CS_DEG120 0.47745E+02
// #define UP_CS_DEG150 0.45775E+02
// #define DOWN_CS_DEG30 0.86819E+01
// #define DOWN_CS_DEG60 0.74839E+01
// #define DOWN_CS_DEG90 0.59916E+01
// #define DOWN_CS_DEG120 0.71984E+01
// #define DOWN_CS_DEG150 0.76977E+01

// 4+ --> 2+
// #define UP_CS_DEG30 0.56784E+00
// #define UP_CS_DEG60 0.52811E+00
// #define UP_CS_DEG90 0.51393E+00
// #define UP_CS_DEG120 0.52152E+00
// #define UP_CS_DEG150 0.55529E+00
// #define DOWN_CS_DEG30 0.11343E+01
// #define DOWN_CS_DEG60 0.90062E+00
// #define DOWN_CS_DEG90 0.70913E+00
// #define DOWN_CS_DEG120 0.10128E+01
// #define DOWN_CS_DEG150 0.10128E+01

// 3- --> 4+
// #define UP_CS_DEG30 0.57989E-03
// #define UP_CS_DEG60 0.59575E-03
// #define UP_CS_DEG90 0.60098E-03
// #define UP_CS_DEG120 0.58785E-03
// #define UP_CS_DEG150 0.56699E-03
// #define DOWN_CS_DEG30 0.41368E-03
// #define DOWN_CS_DEG60 0.45351E-03
// #define DOWN_CS_DEG90 0.45960E-03
// #define DOWN_CS_DEG120 0.41912E-03
// #define DOWN_CS_DEG150 0.36508E-03

// // 3- --> 2+
// #define UP_CS_DEG30 0.70072E-01
// #define UP_CS_DEG60 0.75347E-01
// #define UP_CS_DEG90 0.77591E-01
// #define UP_CS_DEG120 0.74287E-01
// #define UP_CS_DEG150 0.68473E-01
// #define DOWN_CS_DEG30 0.44757E-01
// #define DOWN_CS_DEG60 0.58810E-01
// #define DOWN_CS_DEG90 0.63278E-01
// #define DOWN_CS_DEG120 0.53544E-01
// #define DOWN_CS_DEG150 0.38961E-01

// // 3- --> 0+
// #define UP_CS_DEG30 0.26323E-08
// #define UP_CS_DEG60 0.21547E-08
// #define UP_CS_DEG90 0.19877E-08
// #define UP_CS_DEG120 0.21547E-08
// #define UP_CS_DEG150 0.26323E-08
// #define DOWN_CS_DEG30 0.31500E-08
// #define DOWN_CS_DEG60 0.85260E-09
// #define DOWN_CS_DEG90 0.15148E-08
// #define DOWN_CS_DEG120 0.85260E-09
// #define DOWN_CS_DEG150 0.31500E-08

// // 1- --> 2+
// #define UP_CS_DEG30 0.17430E+00
// #define UP_CS_DEG60 0.17459E+00
// #define UP_CS_DEG90 0.17408E+00
// #define UP_CS_DEG120 0.17256E+00
// #define UP_CS_DEG150 0.17083E+00
// #define DOWN_CS_DEG30 0.14003E-01
// #define DOWN_CS_DEG60 0.14569E-01
// #define DOWN_CS_DEG90 0.14469E-01
// #define DOWN_CS_DEG120 0.13529E-01
// #define DOWN_CS_DEG150 0.12401E-01

// // 1- --> 0+
#define UP_CS_DEG30 0.55376E+00
#define UP_CS_DEG60 0.58494E+00
#define UP_CS_DEG90 0.59794E+00
#define UP_CS_DEG120 0.57770E+00
#define UP_CS_DEG150 0.54241E+00
#define DOWN_CS_DEG30 0.24379E-01
#define DOWN_CS_DEG60 0.54195E-01
#define DOWN_CS_DEG90 0.65303E-01
#define DOWN_CS_DEG120 0.47830E-01
#define DOWN_CS_DEG150 0.20018E-01

//
void yield()
{
  double y1u = 1E-30*5E-9*TIME*3600/Z_BEAM/1.6E-19*6.022E23/A_AIM*UP_CS_DEG30*GE_SOLID_ANGLE*DEG30_NUM*GAMMA_EFF;
  double y2u = 1E-30*5E-9*TIME*3600/Z_BEAM/1.6E-19*6.022E23/A_AIM*UP_CS_DEG60*GE_SOLID_ANGLE*DEG60_NUM*GAMMA_EFF;
  double y3u = 1E-30*5E-9*TIME*3600/Z_BEAM/1.6E-19*6.022E23/A_AIM*UP_CS_DEG90*GE_SOLID_ANGLE*DEG90_NUM*GAMMA_EFF;
  double y4u = 1E-30*5E-9*TIME*3600/Z_BEAM/1.6E-19*6.022E23/A_AIM*UP_CS_DEG120*GE_SOLID_ANGLE*DEG120_NUM*GAMMA_EFF;
  double y5u = 1E-30*5E-9*TIME*3600/Z_BEAM/1.6E-19*6.022E23/A_AIM*UP_CS_DEG150*GE_SOLID_ANGLE*DEG150_NUM*GAMMA_EFF;
  
  double y1d = 1E-30*5E-9*TIME*3600/Z_BEAM/1.6E-19*6.022E23/A_AIM*DOWN_CS_DEG30*GE_SOLID_ANGLE*DEG30_NUM*GAMMA_EFF;
  double y2d = 1E-30*5E-9*TIME*3600/Z_BEAM/1.6E-19*6.022E23/A_AIM*DOWN_CS_DEG60*GE_SOLID_ANGLE*DEG60_NUM*GAMMA_EFF;
  double y3d = 1E-30*5E-9*TIME*3600/Z_BEAM/1.6E-19*6.022E23/A_AIM*DOWN_CS_DEG90*GE_SOLID_ANGLE*DEG90_NUM*GAMMA_EFF;
  double y4d = 1E-30*5E-9*TIME*3600/Z_BEAM/1.6E-19*6.022E23/A_AIM*DOWN_CS_DEG120*GE_SOLID_ANGLE*DEG120_NUM*GAMMA_EFF;
  double y5d = 1E-30*5E-9*TIME*3600/Z_BEAM/1.6E-19*6.022E23/A_AIM*DOWN_CS_DEG150*GE_SOLID_ANGLE*DEG150_NUM*GAMMA_EFF;

  cout << y1u+y2u+y3u+y4u+y5u+y1d+y2d+y3d+y4d+y5d << endl;
}